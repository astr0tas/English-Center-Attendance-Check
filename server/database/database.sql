CREATE DATABASE HTTT;
USE HTTT;
CREATE TABLE EMPLOYEE (
  ssn VARCHAR(12) NOT NULL,
  name VARCHAR(50) NOT NULL,
  phone VARCHAR(20),
  username VARCHAR(20) UNIQUE NOT NULL,
  password VARCHAR(50) NOT NULL,
  birthday DATE,
  birthplace VARCHAR(50),
  email VARCHAR(50),
  address VARCHAR(100),
  PRIMARY KEY (ssn)
);
CREATE TABLE STUDENT (
  ssn VARCHAR(12) NOT NULL,
  name VARCHAR(50) NOT NULL,
  phone VARCHAR(20),
  username VARCHAR(20) UNIQUE NOT NULL,
  password VARCHAR(50) NOT NULL,
  birthday DATE,
  birthplace VARCHAR(50),
  email VARCHAR(50),
  address VARCHAR(100),
  PRIMARY KEY (ssn)
);
CREATE TABLE ADMIN (
    ssn VARCHAR(12) PRIMARY KEY,
    FOREIGN KEY (ssn)
        REFERENCES EMPLOYEE(ssn)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
CREATE TABLE SUPERVISOR (
    ssn VARCHAR(12) PRIMARY KEY,
    FOREIGN KEY (ssn)
        REFERENCES EMPLOYEE(ssn)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
CREATE TABLE TEACHER (
    SSN VARCHAR(12) PRIMARY KEY,
    Atten_ssn VARCHAR(12),
    Atten_status VARCHAR(50),
    Atten_note VARCHAR(50),
    FOREIGN KEY (SSN)
        REFERENCES EMPLOYEE(ssn)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    FOREIGN KEY (Atten_ssn)
        REFERENCES SUPERVISOR(ssn)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
CREATE TABLE CLASS (
  Start_date DATE,
  End_date DATE,
  Name VARCHAR(50) NOT NULL,
  Status VARCHAR(50) NOT NULL,
  Max_stu INT NOT NULL,
  Current_stu INT NOT NULL,
  PRIMARY KEY (Name)
);
CREATE TABLE IN_CLASS (
    Essn VARCHAR(12) NOT NULL,
    Cname VARCHAR(50) NOT NULL,
    FOREIGN KEY (Essn)
        REFERENCES STUDENT(ssn)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    FOREIGN KEY (Cname)
        REFERENCES CLASS(Name)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    PRIMARY KEY(Essn,Cname)
); 
CREATE TABLE RESPONSIBLY_FOR (
    Essn VARCHAR(12) NOT NULL,
    Cname VARCHAR(50) NOT NULL,
    FOREIGN KEY (Essn)
        REFERENCES SUPERVISOR(ssn)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    FOREIGN KEY (Cname)
        REFERENCES CLASS(Name)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    PRIMARY KEY(Essn,Cname)
); 
CREATE TABLE CLASSROOM (
    Number INT PRIMARY KEY,
    Max_seat INT NOT NULL
); 
CREATE TABLE TIMETABLE (
    Start_hour TIME NOT NULL,
    End_hour TIME NOT NULL,
    PRIMARY KEY(Start_hour,End_hour)
); 
CREATE TABLE SESSION_TIME (
    Start_hour TIME NOT NULL,
    End_hour TIME NOT NULL,
    Date DATE NOT NULL,
    FOREIGN KEY (Start_hour, End_hour)
        REFERENCES TIMETABLE(Start_hour, End_hour)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    PRIMARY KEY(Start_hour,End_hour,Date)
); 
CREATE TABLE SESSION (
    Cname VARCHAR(50) NOT NULL,
    Session_date DATE NOT NULL,
    Start_hour TIME NOT NULL,
    End_hour TIME NOT NULL,
    Session_number INT NOT NULL,
    Status VARCHAR(50) NOT NULL,
    Make_up VARCHAR(50),
    SSnum INT UNIQUE,
    SupervisorSSN VARCHAR(12) NOT NULL,
    Note VARCHAR(50),
    FOREIGN KEY (Start_hour, End_hour,Session_date)
        REFERENCES SESSION_TIME(Start_hour, End_hour,Date)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    FOREIGN KEY (Cname)
        REFERENCES CLASS(Name)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    PRIMARY KEY(Cname,Session_date,Start_hour,End_hour,Session_number)
);
CREATE TABLE TEACHER_ATTENDANCE (
    SSnum INT NOT NULL,
    TeacherSSN VARCHAR(12) NOT NULL,
    SupervisorSSN VARCHAR(12) NOT NULL,
    Status VARCHAR(50),
    Note VARCHAR(50),
    PRIMARY KEY(SSnum, TeacherSSN,SupervisorSSN),
    FOREIGN KEY(SSnum) REFERENCES SESSION(SSnum) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(TeacherSSN) REFERENCES TEACHER(SSN) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(SupervisorSSN) REFERENCES SUPERVISOR(ssn) ON DELETE CASCADE ON UPDATE CASCADE
);  
CREATE TABLE STUDENT_ATTENDANCE (
    SSnum INT NOT NULL,
    Essn VARCHAR(12) NOT NULL,
    Status VARCHAR(50),
    Note VARCHAR(50),
    PRIMARY KEY(SSnum, Essn),
    FOREIGN KEY(SSnum) REFERENCES SESSION(SSnum) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(Essn) REFERENCES STUDENT(ssn) ON DELETE CASCADE ON UPDATE CASCADE
);  
